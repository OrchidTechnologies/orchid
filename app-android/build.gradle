buildscript {
    ext.kotlin_version = '1.8.10'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = "${orcOutput}/build"

subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def flutterFile = files(orcFlutter)

ext {
    flutter = [compileSdkVersion: 34]
}

android {
    namespace "net.orchid.Orchid"
    compileSdkVersion flutter.compileSdkVersion

    defaultConfig {
        applicationId orcUnique
        minSdkVersion 21
        targetSdkVersion 34
        versionCode orcMonotonic.toInteger() - 946684800
        versionName orcVersion
        manifestPlaceholders = [orcUnique: orcUnique, orcName: orcName]
    }

    signingConfigs {
        orchid {
            keyAlias orcAlias
            keyPassword orcPassword
            storeFile file(orcStore)
            storePassword orcPassword
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.orchid
        }

        release {
            signingConfig signingConfigs.orchid
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        buildConfig true
    }

    sourceSets {
        main {
            java.srcDirs += [orcInterface + "/android/app/src/main/java"]
            res.srcDirs += [orcInterface + "/res"]
            assets.srcDirs += [orcOutput + "/assets"]
            jniLibs.srcDirs = [orcOutput + "/jnilibs"]
        }
    }

    dependencies {
        implementation flutterFile
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

        implementation "androidx.activity:activity:1.8.1"
        implementation "androidx.core:core:1.13.1"
        implementation "androidx.lifecycle:lifecycle-common:2.7.0"
        implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
        implementation "androidx.tracing:tracing:1.2.0"
        implementation "androidx.window:window:1.2.0"
        implementation "androidx.window:window-java:1.2.0"
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

import groovy.json.JsonSlurper
def plugins = new JsonSlurper().parseText(file(orcInterface + "/.flutter-plugins-dependencies").text)
plugins.plugins.android.each { dependency ->
    def plugin = project.rootProject.findProject(":${dependency.name}")

    project.dependencies {
        implementation plugin
    }

    plugin.afterEvaluate {
        plugin.android { compileSdkVersion flutter.compileSdkVersion }

        plugin.android.buildTypes {
            profile {
                initWith debug
            }
        }
        plugin.dependencies {
            compileOnly flutterFile

            implementation "androidx.annotation:annotation:1.0.0"
            implementation "com.android.support:support-annotations:28.0.0"
            implementation "org.jetbrains:annotations:24.0.1"
        }
    }
}
